"""Initial

Revision ID: d7db9b0db77c
Revises:
Create Date: 2023-12-02 18:28:30.425894

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'd7db9b0db77c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('display_name', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=100), nullable=False),
        sa.Column('phone', sa.String(length=15), nullable=True),
        sa.Column('gender', sa.Enum('male', 'female', name='gender'), nullable=False),
        sa.Column('photo_url', sa.String(length=200), nullable=False),
        sa.Column('vk_id', sa.String(length=15), nullable=False),
        sa.Column('vk_access_token', sa.String(length=500), nullable=False),
        sa.Column('vk_friends_data', sa.JSON(), nullable=False),
        sa.Column('firebase_uid', sa.String(length=100), nullable=False),
        sa.Column('firebase_push_token', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('firebase_uid'),
        sa.UniqueConstraint('vk_access_token'),
        sa.UniqueConstraint('vk_id'),
    )
    op.create_table(
        'user_following',
        sa.Column('follower_id', sa.Integer(), nullable=False),
        sa.Column('followed_id', sa.Integer(), nullable=False),
        sa.CheckConstraint('follower_id <> followed_id'),
        sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['follower_id'], ['user.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('follower_id', 'followed_id'),
    )
    op.create_table(
        'wish',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('reserved_by_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('description', sa.String(length=1000), nullable=True),
        sa.Column('price', sa.DECIMAL(precision=2), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.CheckConstraint(
            'user_id <> reserved_by_id', name='wish_user_not_equal_reserved_by'
        ),
        sa.ForeignKeyConstraint(
            ['reserved_by_id'],
            ['user.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wish')
    op.drop_table('user_following')
    op.drop_table('user')
    # ### end Alembic commands ###
